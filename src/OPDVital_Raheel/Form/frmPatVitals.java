package OPDVital_Raheel.Form;

import OPDVital.Raheel.BO.PatientSymptom;
import OPDVital.Raheel.BO.PatientVitalSigns;
import OPDVital_Raheel.Controller.PatientVitalSignsController;
import OPDVital_Raheel.Controller.VitalSignsController;
import OPDVital_Raheel.TableModel.PendingConsultancyTableModel;
import OPDVital_Raheel.TableModel.VitalsDataTableModel;
import TableModel.GeneralTableLookAndFeel;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumn;
import utilities.Constants;
import utilities.Database;
import utilities.DisplayLOV;
import utilities.GUIUtils;
import utilities.Status;

public class frmPatVitals extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmPatientRegistration
     */
   
    public List<PatientSymptom> listPendingConsultancies = new ArrayList(); 
    public List<PatientVitalSigns> listPatientVitals = new ArrayList(); 
    
    VitalSignsController ctlVitalSigns = new VitalSignsController();
    PatientVitalSignsController ctlPatientVitalSigns = new PatientVitalSignsController();
    PatientVitalSigns patientVitalsBo = new PatientVitalSigns();
    DisplayLOV lov = new DisplayLOV();
    
    private String patientId = "";
    private String consultantId = "";
    private String consultantName = "";
    private String notesById = "";
    private String notesByName = "";
    private String fromDate = "";
    private String toDate = "";
    double weightInPound = 0;
    double bmi = 0;
    private int heightInInches = 0;

    public frmPatVitals() {
        initComponents();
        this.setSize(Constants.xSize - 10, Constants.ySize + 45);
        txtBmi.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        txtNotesBy = new javax.swing.JTextField();
        jLabel85 = new javax.swing.JLabel();
        chkAllNotes = new javax.swing.JCheckBox();
        jLabel94 = new javax.swing.JLabel();
        txtNoteType = new javax.swing.JTextField();
        txtFromDate = new org.jdesktop.swingx.JXDatePicker();
        txtToDate = new org.jdesktop.swingx.JXDatePicker();
        btnSaveConsultancy1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        btnExitAssign = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPendingConsultancies = new javax.swing.JTable();
        txtSrchTokenNumber = new javax.swing.JTextField();
        txtSrchPatientName = new javax.swing.JTextField();
        txtSrchPatientId = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        txtPrimaryConsultant = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPatientVitals = new javax.swing.JTable();
        txtPulse = new javax.swing.JTextField();
        txtFbs = new javax.swing.JTextField();
        txtRbs = new javax.swing.JTextField();
        txtBpSystolic = new javax.swing.JTextField();
        txtHeartRate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtBpDiastolic = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        txtTemp = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtInr = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtBmi = new javax.swing.JTextField();
        lblBmiMessage = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel84 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        txtPatIdNotes = new javax.swing.JTextField();
        jLabel87 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        txtNotesEnteredBy = new javax.swing.JTextField();
        txtToDated = new org.jdesktop.swingx.JXDatePicker();
        txtFromDated = new org.jdesktop.swingx.JXDatePicker();
        btnSaveConsultancy2 = new javax.swing.JButton();
        jLabel96 = new javax.swing.JLabel();
        txtVitalId = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        jLabel82.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel82.setForeground(new java.awt.Color(102, 0, 0));
        jLabel82.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel82.setText("From Date:");

        jLabel83.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel83.setForeground(new java.awt.Color(102, 0, 0));
        jLabel83.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel83.setText("To:");

        txtNotesBy.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNotesBy.setForeground(new java.awt.Color(102, 0, 0));
        txtNotesBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNotesByActionPerformed(evt);
            }
        });

        jLabel85.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel85.setForeground(new java.awt.Color(102, 0, 0));
        jLabel85.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel85.setText("Note Type:");

        chkAllNotes.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        chkAllNotes.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chkAllNotes.setForeground(new java.awt.Color(102, 0, 0));
        chkAllNotes.setText("ALL");
        chkAllNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAllNotesActionPerformed(evt);
            }
        });

        jLabel94.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel94.setForeground(new java.awt.Color(102, 0, 0));
        jLabel94.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel94.setText("Notes By:");

        txtNoteType.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNoteType.setForeground(new java.awt.Color(102, 0, 0));
        txtNoteType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoteTypeActionPerformed(evt);
            }
        });

        txtFromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromDateActionPerformed(evt);
            }
        });

        txtToDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToDateActionPerformed(evt);
            }
        });

        btnSaveConsultancy1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSaveConsultancy1.setText("Search");
        btnSaveConsultancy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveConsultancy1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel85, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel82, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel94, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(txtFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNotesBy)
                            .addComponent(txtNoteType))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chkAllNotes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSaveConsultancy1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))))
                .addGap(5, 5, 5))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel83)
                        .addComponent(txtToDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel82, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel94)
                    .addComponent(chkAllNotes, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNotesBy, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel85, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNoteType, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveConsultancy1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );

        setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle(Constants.title+"Reprint Invoice");
        setFrameIcon(null);

        jPanel4.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel7.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText(Constants.footerAllScreens);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 904, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel12.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel12.setForeground(new java.awt.Color(255, 255, 255));

        btnClear.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExitAssign.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnExitAssign.setForeground(new java.awt.Color(102, 0, 0));
        btnExitAssign.setText("Exit");
        btnExitAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitAssignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnExitAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(383, 383, 383))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnExitAssign))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Vitals", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jPanel8.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consultancies", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        tblPendingConsultancies.setBackground(java.awt.SystemColor.activeCaption);
        tblPendingConsultancies.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblPendingConsultancies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", "" },
            },
            new String [] {
                "Daily No","Patient ID", "Patient Name","No of Visits"
            }
        ));
        tblPendingConsultancies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPendingConsultanciesMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPendingConsultanciesMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblPendingConsultanciesMouseReleased(evt);
            }
        });
        tblPendingConsultancies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblPendingConsultanciesKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblPendingConsultancies);

        txtSrchTokenNumber.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtSrchTokenNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSrchTokenNumberActionPerformed(evt);
            }
        });

        txtSrchPatientName.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtSrchPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSrchPatientNameActionPerformed(evt);
            }
        });

        txtSrchPatientId.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtSrchPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSrchPatientIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(txtSrchPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSrchPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSrchTokenNumber))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSrchTokenNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSrchPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSrchPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("MRNo:");

        txtPatientId.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientIdActionPerformed(evt);
            }
        });

        txtPrimaryConsultant.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtPrimaryConsultant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrimaryConsultantActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Primary:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        txtPatientName.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrimaryConsultant)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPatientId)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrimaryConsultant))
                .addGap(22, 22, 22))
        );

        jPanel9.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Vitals", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        tblPatientVitals.setBackground(java.awt.SystemColor.activeCaption);
        tblPatientVitals.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblPatientVitals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"","", "", "", "","" },
            },
            new String [] {
                "Date","BP","RBS", "FBS","PULSE","HEART RATE"
            }
        ));
        tblPatientVitals.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientVitalsMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPatientVitalsMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblPatientVitalsMouseReleased(evt);
            }
        });
        tblPatientVitals.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblPatientVitalsKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tblPatientVitals);

        txtPulse.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtPulse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPulseActionPerformed(evt);
            }
        });

        txtFbs.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtFbs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFbsActionPerformed(evt);
            }
        });

        txtRbs.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtRbs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRbsActionPerformed(evt);
            }
        });

        txtBpSystolic.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtBpSystolic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBpSystolicActionPerformed(evt);
            }
        });

        txtHeartRate.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtHeartRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeartRateActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("BP Sys");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("RBS ");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("FBS");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("PULSE");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("H/ R");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("BP Dia");

        txtBpDiastolic.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtBpDiastolic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBpDiastolicActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText(" Wt (kg)");

        txtWeight.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWeightActionPerformed(evt);
            }
        });

        txtTemp.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTempActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 0, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Temp");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 0, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Ht (inch)");

        txtHeight.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeightActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 0, 0));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("INR : ");

        txtInr.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtInr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInrActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 153, 0));
        jButton1.setText("Save Vitals");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 0, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("BMI");

        txtBmi.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtBmi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBmiActionPerformed(evt);
            }
        });

        lblBmiMessage.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblBmiMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(lblBmiMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(txtBpSystolic))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                    .addComponent(txtBpDiastolic))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                                    .addComponent(txtRbs))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFbs)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                    .addComponent(txtHeartRate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                                    .addComponent(txtBmi))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtInr, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBpDiastolic, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInr, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtFbs, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtRbs, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(35, 35, 35))
                        .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBpSystolic, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBmi, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(lblBmiMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );

        jPanel13.setBackground(new java.awt.Color(Constants.red , Constants.green , Constants.black));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        jLabel84.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel84.setForeground(new java.awt.Color(102, 0, 0));
        jLabel84.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel84.setText("From Date : ");

        jLabel86.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel86.setForeground(new java.awt.Color(102, 0, 0));
        jLabel86.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel86.setText("To Date : ");

        txtPatIdNotes.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtPatIdNotes.setForeground(new java.awt.Color(102, 0, 0));
        txtPatIdNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatIdNotesActionPerformed(evt);
            }
        });

        jLabel87.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel87.setForeground(new java.awt.Color(102, 0, 0));
        jLabel87.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel87.setText("Vitals By : ");

        jLabel95.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel95.setForeground(new java.awt.Color(102, 0, 0));
        jLabel95.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel95.setText("MR No : ");

        txtNotesEnteredBy.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNotesEnteredBy.setForeground(new java.awt.Color(102, 0, 0));
        txtNotesEnteredBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNotesEnteredByActionPerformed(evt);
            }
        });

        txtToDated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToDatedActionPerformed(evt);
            }
        });

        txtFromDated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromDatedActionPerformed(evt);
            }
        });

        btnSaveConsultancy2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSaveConsultancy2.setText("Search");
        btnSaveConsultancy2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveConsultancy2ActionPerformed(evt);
            }
        });

        jLabel96.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel96.setForeground(new java.awt.Color(102, 0, 0));
        jLabel96.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel96.setText("Vital Id : ");

        txtVitalId.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtVitalId.setForeground(new java.awt.Color(102, 0, 0));
        txtVitalId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVitalIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel84)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFromDated, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel95, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPatIdNotes)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtToDated, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNotesEnteredBy, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel96)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSaveConsultancy2, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(txtVitalId))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel95)
                    .addComponent(jLabel87)
                    .addComponent(txtNotesEnteredBy, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatIdNotes, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel96)
                    .addComponent(txtVitalId, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel84, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFromDated, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtToDated, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel86, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSaveConsultancy2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(5, 5, 5))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        //call clear Form 
        clear();
}//GEN-LAST:event_btnClearActionPerformed

    private void btnExitAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitAssignActionPerformed

        this.dispose();
}//GEN-LAST:event_btnExitAssignActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        // TODO add your handling code here:
        listPendingConsultancies.clear();
        listPendingConsultancies = ctlVitalSigns.pendingConsultancies(
                    "", txtPatientName.getText().trim().toUpperCase(), "", "");
            setDataInPendingConsulTable(listPendingConsultancies);
    }//GEN-LAST:event_txtPatientNameActionPerformed

    private void txtPrimaryConsultantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrimaryConsultantActionPerformed
        // TODO add your handling code here:
        String query = " SELECT USER_NAME ID,NAME DESCRIPTION  FROM    \n"
                + Database.DCMS.users + "                                  \n"
                + " WHERE UPPER(NAME) LIKE '%"
                + txtPrimaryConsultant.getText().toUpperCase().trim().replaceAll("'", "'") + "%'"
                + " ORDER BY ID";
        lov.LOVSelection(query, this);

        if (Constants.lovID.equalsIgnoreCase("ID")) {
            return;
        }

        consultantId = Constants.lovID;
        consultantName = Constants.lovDescription;
        txtPrimaryConsultant.setText(Constants.lovDescription);
        listPendingConsultancies.clear();
        listPendingConsultancies = ctlVitalSigns.pendingConsultancies(
                    "", "", consultantId, "");
            setDataInPendingConsulTable(listPendingConsultancies);
    }//GEN-LAST:event_txtPrimaryConsultantActionPerformed

    private void txtPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientIdActionPerformed

        if (GUIUtils.completePatientId(txtPatientId.getText().trim())) {
            patientId = Constants.completePatientId;
            listPendingConsultancies = ctlVitalSigns.pendingConsultancies(
                    patientId, "", "", "");
            setDataInPendingConsulTable(listPendingConsultancies);
            listPatientVitals = ctlPatientVitalSigns.getPatientVital(patientId, 
                    "", "", "", "");
            setPatientVitalsTable(listPatientVitals);
        }
        else {
            JOptionPane.showMessageDialog(null, "Kindly Enter Correct Patient Id");
        }
    }//GEN-LAST:event_txtPatientIdActionPerformed

    private void txtSrchPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSrchPatientIdActionPerformed
        // TODO add your handling code here:
        if (GUIUtils.completePatientId(txtSrchPatientId.getText().trim())) {
            patientId = Constants.completePatientId;
            txtSrchPatientId.setText(patientId);
            txtSrchPatientId.setText(patientId);
            listPendingConsultancies = ctlVitalSigns.pendingConsultancies(
                    patientId, "", "", "");
            setDataInPendingConsulTable(listPendingConsultancies);
        }
        else {
            JOptionPane.showMessageDialog(null, "Kindly Enter Correct Patient Id");
        }
    }//GEN-LAST:event_txtSrchPatientIdActionPerformed

    private void txtSrchPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSrchPatientNameActionPerformed
        // TODO add your handling code here:
        listPendingConsultancies.clear();
        listPendingConsultancies = ctlVitalSigns.pendingConsultancies(
                    "", txtSrchPatientName.getText().trim().toUpperCase(), "", "");
            setDataInPendingConsulTable(listPendingConsultancies);
    }//GEN-LAST:event_txtSrchPatientNameActionPerformed

    private void txtSrchTokenNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSrchTokenNumberActionPerformed
        // TODO add your handling code here:
        listPendingConsultancies.clear();
        listPendingConsultancies = ctlVitalSigns.pendingConsultancies(
                    "", "", "", txtSrchTokenNumber.getText().trim().toUpperCase());
            setDataInPendingConsulTable(listPendingConsultancies);
    }//GEN-LAST:event_txtSrchTokenNumberActionPerformed

    private void tblPendingConsultanciesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPendingConsultanciesKeyReleased

    }//GEN-LAST:event_tblPendingConsultanciesKeyReleased

    private void tblPendingConsultanciesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPendingConsultanciesMouseReleased
        PatientSymptom objSetData = listPendingConsultancies.get(
                tblPendingConsultancies.getSelectedRow());
        txtPatientId.setText(objSetData.getPatientId());
        txtPatientName.setText(objSetData.getPatientName());
        txtPrimaryConsultant.setText(objSetData.getConsultantName());
    }//GEN-LAST:event_tblPendingConsultanciesMouseReleased

    private void tblPendingConsultanciesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPendingConsultanciesMousePressed

    }//GEN-LAST:event_tblPendingConsultanciesMousePressed

    private void tblPendingConsultanciesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPendingConsultanciesMouseClicked

    }//GEN-LAST:event_tblPendingConsultanciesMouseClicked

    private void tblPatientVitalsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientVitalsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPatientVitalsMouseClicked

    private void tblPatientVitalsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientVitalsMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPatientVitalsMousePressed

    private void tblPatientVitalsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientVitalsMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPatientVitalsMouseReleased

    private void tblPatientVitalsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPatientVitalsKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPatientVitalsKeyReleased

    private void txtPulseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPulseActionPerformed
        // TODO add your handling code here:
        txtHeartRate.requestFocus();
    }//GEN-LAST:event_txtPulseActionPerformed

    private void txtFbsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFbsActionPerformed
        // TODO add your handling code here:
        txtPulse.requestFocus();
    }//GEN-LAST:event_txtFbsActionPerformed

    private void txtRbsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRbsActionPerformed
        // TODO add your handling code here:
        txtFbs.requestFocus();
    }//GEN-LAST:event_txtRbsActionPerformed

    private void txtBpSystolicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBpSystolicActionPerformed
        // TODO add your handling code here:
        txtBpDiastolic.requestFocus();
    }//GEN-LAST:event_txtBpSystolicActionPerformed

    private void txtHeartRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeartRateActionPerformed
        // TODO add your handling code here:
        txtTemp.requestFocus();
    }//GEN-LAST:event_txtHeartRateActionPerformed

    private void txtNotesByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNotesByActionPerformed

        
    }//GEN-LAST:event_txtNotesByActionPerformed

    private void chkAllNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAllNotesActionPerformed

        if (chkAllNotes.isSelected()) {
            // searchPatientNotes();
        }
    }//GEN-LAST:event_chkAllNotesActionPerformed

    private void txtNoteTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoteTypeActionPerformed

        //        String query = "SELECT NTI.ID    ID,                 \n"
        //                + "NTI.DESCRIPTION || ' (' || NTI.ADDITIONAL_INFO || ')'  DESCRIPTION \n"
        //                + "FROM                                      \n"
        //                + Database.DCMS.definitionTypeDetail + " NTI \n"
        //                + "WHERE UPPER(NTI.DESCRIPTION) LIKE '%" + txtNoteType.getText() + "%' \n"
        //                + " AND NTI.DEF_TYPE_ID = " + DefinitionTypes.noteTypeId + "\n";
        //
        //        lov.LOVCaseSensitiveSelection(query, this);
        //        if (Constants.lovID.equalsIgnoreCase("ID")) {
            //            noteTypeId = "";
            //            txtNoteType.setText("");
            //        } else {
            //            noteTypeId = Constants.lovID;
            //            txtNoteType.setText(Constants.lovDescription.toUpperCase());
            //        }
    }//GEN-LAST:event_txtNoteTypeActionPerformed

    private void txtFromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromDateActionPerformed

        
    }//GEN-LAST:event_txtFromDateActionPerformed

    private void txtToDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToDateActionPerformed

        
    }//GEN-LAST:event_txtToDateActionPerformed

    private void btnSaveConsultancy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveConsultancy1ActionPerformed

        //selectPatientNotes();
    }//GEN-LAST:event_btnSaveConsultancy1ActionPerformed

    private void txtPatIdNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatIdNotesActionPerformed

        if (GUIUtils.completePatientId(txtPatIdNotes.getText().trim())) {
            patientId = Constants.completePatientId;
            txtPatIdNotes.setText(patientId);
            listPatientVitals = ctlPatientVitalSigns.getPatientVital(patientId, 
                    "", "", "", "");
            setPatientVitalsTable(listPatientVitals);
        }
        
        else {
            JOptionPane.showMessageDialog(null, "Kindly Enter Correct Patient Id");
        }
    }//GEN-LAST:event_txtPatIdNotesActionPerformed

    private void txtNotesEnteredByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNotesEnteredByActionPerformed

        String query = " SELECT USER_NAME ID,NAME DESCRIPTION  FROM    \n"
                + Database.DCMS.users + "                                  \n"
                + " WHERE UPPER(NAME) LIKE '%"
                + txtNotesEnteredBy.getText().toUpperCase().trim().replaceAll("'", "'") + "%'"
                + " AND USER_NAME IN ( SELECT DISTINCT(CRTD_BY) FROM " 
                + Database.DCMS.patientVitalSigns + ")                  \n"
                + " ORDER BY ID";
        lov.LOVSelection(query, this);

        if (Constants.lovID.equalsIgnoreCase("ID")) {
            return;
        }

        notesById = Constants.lovID;
        notesByName = Constants.lovDescription;
        txtNotesEnteredBy.setText(Constants.lovDescription);
        listPatientVitals.clear();
        listPatientVitals = ctlPatientVitalSigns.getPatientVital("", notesById, 
                                "", "", "");
        setPatientVitalsTable(listPatientVitals);
    }//GEN-LAST:event_txtNotesEnteredByActionPerformed

    private void txtToDatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToDatedActionPerformed

       if (txtToDated.getDate().getDate() == 0) {
            JOptionPane.showMessageDialog(null, "Enter the Date to search",
                    "On call Doctors", JOptionPane.WARNING_MESSAGE);
            return;
        }

        SimpleDateFormat dateFormat
                = new SimpleDateFormat("dd-MMM-yy");
        toDate = dateFormat.format(txtToDated.getDate());
    }//GEN-LAST:event_txtToDatedActionPerformed

    private void txtFromDatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromDatedActionPerformed

        if (txtFromDated.getDate().getDate() == 0) {
            JOptionPane.showMessageDialog(null, "Enter the Date to search",
                    "On call Doctors", JOptionPane.WARNING_MESSAGE);
            return;
        }

        SimpleDateFormat dateFormat
                = new SimpleDateFormat("dd-MMM-yy");
        fromDate = dateFormat.format(txtFromDated.getDate());
    }//GEN-LAST:event_txtFromDatedActionPerformed

    private void btnSaveConsultancy2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveConsultancy2ActionPerformed

        listPatientVitals.clear();
        listPatientVitals = ctlPatientVitalSigns.getPatientVital(patientId, notesById, 
                                txtVitalId.getText().trim(), fromDate, toDate);
        setPatientVitalsTable(listPatientVitals);
    }//GEN-LAST:event_btnSaveConsultancy2ActionPerformed

    private void txtVitalIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVitalIdActionPerformed
        // TODO add your handling code here:
        listPatientVitals.clear();
        listPatientVitals = ctlPatientVitalSigns.getPatientVital("", "", 
                                txtVitalId.getText().trim(), "", "");
        setPatientVitalsTable(listPatientVitals);
    }//GEN-LAST:event_txtVitalIdActionPerformed

    private void txtBpDiastolicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBpDiastolicActionPerformed
        // TODO add your handling code here:
        txtRbs.requestFocus();
    }//GEN-LAST:event_txtBpDiastolicActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        saveVitals();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWeightActionPerformed
        // TODO add your handling code here:
        txtHeight.requestFocus();
    }//GEN-LAST:event_txtWeightActionPerformed

    private void txtTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTempActionPerformed
        // TODO add your handling code here:
        txtWeight.requestFocus();
    }//GEN-LAST:event_txtTempActionPerformed

    private void txtHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeightActionPerformed
        // TODO add your handling code here:
        weightInPound = Double.parseDouble(txtWeight.getText().trim());
        System.err.println("\n Wght Kg" + weightInPound);
        weightInPound = (weightInPound / 0.45);
        System.err.println("\n Wght Lb" + weightInPound);
        heightInInches = Integer.parseInt(txtHeight.getText().trim());
        System.err.println("\n height" + heightInInches);
        bmi = (weightInPound* 703)/ (heightInInches * heightInInches);
        System.err.println("\n Before ROund" + bmi);
        bmi = Math.round(bmi*10)/ 10; // round upto 1 decimnal plavce
        txtBmi.setText( Double.toString(bmi));
        System.err.println("\n After rounf final" + bmi);
        if(bmi < 18.5){
            lblBmiMessage.setText("Body Mass index is Under Weight");
        }else if(bmi > 18.5 && bmi <24.9){
            lblBmiMessage.setText("Body Mass index is Normal Weight");
            lblBmiMessage.setForeground(Color.green);
        }else if(bmi > 25 && bmi <29.9){
            lblBmiMessage.setText("Body Mass index is Over Weight");
            lblBmiMessage.setForeground(Color.MAGENTA);
        }else if(bmi > 30){
            lblBmiMessage.setText("OBESITY");
            lblBmiMessage.setForeground(Color.MAGENTA); 
        }
        txtInr.requestFocus();
    }//GEN-LAST:event_txtHeightActionPerformed

    private void txtInrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInrActionPerformed
        // TODO add your handling code here:
        saveVitals();
    }//GEN-LAST:event_txtInrActionPerformed

    private void txtBmiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBmiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBmiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExitAssign;
    private javax.swing.JButton btnSaveConsultancy1;
    private javax.swing.JButton btnSaveConsultancy2;
    private javax.swing.JCheckBox chkAllNotes;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBmiMessage;
    private javax.swing.JTable tblPatientVitals;
    private javax.swing.JTable tblPendingConsultancies;
    private javax.swing.JTextField txtBmi;
    private javax.swing.JTextField txtBpDiastolic;
    private javax.swing.JTextField txtBpSystolic;
    private javax.swing.JTextField txtFbs;
    private org.jdesktop.swingx.JXDatePicker txtFromDate;
    private org.jdesktop.swingx.JXDatePicker txtFromDated;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtInr;
    private javax.swing.JTextField txtNoteType;
    private javax.swing.JTextField txtNotesBy;
    private javax.swing.JTextField txtNotesEnteredBy;
    private javax.swing.JTextField txtPatIdNotes;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPrimaryConsultant;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtRbs;
    private javax.swing.JTextField txtSrchPatientId;
    private javax.swing.JTextField txtSrchPatientName;
    private javax.swing.JTextField txtSrchTokenNumber;
    private javax.swing.JTextField txtTemp;
    private org.jdesktop.swingx.JXDatePicker txtToDate;
    private org.jdesktop.swingx.JXDatePicker txtToDated;
    private javax.swing.JTextField txtVitalId;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

    private void setDataInPendingConsulTable(List<PatientSymptom> list) {
        tblPendingConsultancies.setModel(new PendingConsultancyTableModel(list));
        ListSelectionModel selectionModel = tblPendingConsultancies.getSelectionModel();
        tblPendingConsultancies.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        selectionModel.setSelectionInterval(0, 0);
        Constants.tablelook.setJTableEnvironment(tblPendingConsultancies);
        PatientSymptom objSetData = list.get(0);
        txtPatientId.setText(objSetData.getPatientId());
        txtPatientName.setText(objSetData.getPatientName());
        txtPrimaryConsultant.setText(objSetData.getConsultantName());
        setPendingConsultanciesTableColWidth();
    }

    private void setPendingConsultanciesTableColWidth() {
        TableColumn column;
        for (int i = 0; i < tblPendingConsultancies.getColumnCount(); i++) {
            column = tblPendingConsultancies.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(10);
            } else if (i == 1) {
                column.setPreferredWidth(80);
            } else if (i == 2) {
                column.setPreferredWidth(150);
            } else if (i == 3) {
                column.setPreferredWidth(80);
            } else if (i == 4) {
                column.setPreferredWidth(160);
            } else if (i == 5) {
                column.setPreferredWidth(50);
            }
        }
    }
    
    private void setPatientVitalsTable(List list){
        tblPatientVitals.setModel(new VitalsDataTableModel(list));
        ListSelectionModel selectionModel = tblPatientVitals.getSelectionModel();
        tblPatientVitals.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        selectionModel.setSelectionInterval(0, 0);
        Constants.tablelook.setJTableEnvironment(tblPatientVitals);
        setPatientVitalsTableColWidth();
    }

    private void setPatientVitalsTableColWidth() {
    
        TableColumn column;
        for (int i = 0; i < tblPatientVitals.getColumnCount(); i++) {
            column = tblPatientVitals.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(25);
            } else if (i == 1) {
                column.setPreferredWidth(100);
            } else if (i == 2) {
                column.setPreferredWidth(130);
            } else if (i == 3) {
                column.setPreferredWidth(90);
            } else if (i == 4) {
                column.setPreferredWidth(50);
            } else if (i == 5) {
                column.setPreferredWidth(50);
            } else if (i == 6) {
                column.setPreferredWidth(50);
            } else if (i == 7) {
                column.setPreferredWidth(50);
            } else if (i == 8) {
                column.setPreferredWidth(80);
            } else if (i == 9) {
                column.setPreferredWidth(70);
            } else if (i == 10) {
                column.setPreferredWidth(70);
            } else if (i == 11) {
                column.setPreferredWidth(50);
            } else if (i == 12) {
                column.setPreferredWidth(50);
            }
        }
    }

    private void setDataFroInsert() {
        patientVitalsBo.setPatientId(patientId);
        patientVitalsBo.setBloodPressureDiastolic(txtRbs.getText().trim());
        patientVitalsBo.setBloodPressureSystolic(txtBpSystolic.getText().trim());
        patientVitalsBo.setBloodPressureDiastolic(txtBpDiastolic.getText().trim());
        patientVitalsBo.setRbs(txtRbs.getText().trim());
        patientVitalsBo.setFbs(txtFbs.getText().trim());
        patientVitalsBo.setPulse(txtPulse.getText().trim());
        patientVitalsBo.setHeartRate(txtHeartRate.getText().trim());
        patientVitalsBo.setBodyTemperature(txtTemp.getText().trim());
        patientVitalsBo.setHeight(txtHeight.getText().trim());
        patientVitalsBo.setWeight(txtWeight.getText().trim());
        patientVitalsBo.setInr(txtInr.getText().trim());
        patientVitalsBo.setBmi(Double.toString(bmi));
        
        if(ctlPatientVitalSigns.insertPatientVitalSigns(patientVitalsBo)){
            JOptionPane.showMessageDialog(null, "Recor Save Sucessfully.");
        }else{
            JOptionPane.showMessageDialog(null, "Unable to save! \n "
                    + "Kindly contact Administrator.");
        }
    }

    private void saveVitals() {
        int i = JOptionPane.showConfirmDialog(null, "You are going to save Vitals!");

        if (i != 0) {
            return;
        }
        setDataFroInsert();
        clearforInsert();
        listPatientVitals.clear();
        listPatientVitals = ctlPatientVitalSigns.getPatientVital(patientId, "", 
                                "", "", "");
        setPatientVitalsTable(listPatientVitals);
    }

    private void clearforInsert() {
        txtBpDiastolic.setText("");
        txtBpSystolic.setText("");
        txtFbs.setText("");
        txtHeartRate.setText("");
        txtPulse.setText("");
        txtRbs.setText("");
    }
    
    private void clear(){
        txtBpDiastolic.setText("");
        txtBpSystolic.setText("");
        txtFbs.setText("");
        txtHeartRate.setText("");
        txtNoteType.setText("");
        txtNotesBy.setText("");
        txtNotesEnteredBy.setText("");
        txtPatIdNotes.setText("");
        txtPatientId.setText("");
        txtPatientName.setText("");
        txtPrimaryConsultant.setText("");
        txtPulse.setText("");
        txtRbs.setText("");
        txtSrchPatientId.setText("");
        txtSrchPatientName.setText("");
        txtSrchTokenNumber.setText("");
        txtVitalId.setText("");
        txtWeight.setText("");
        txtHeight.setText("");
        txtInr.setText("");
        txtBmi.setText("");
        txtTemp.setText("");
        
        listPatientVitals.clear();
        listPendingConsultancies.clear();
        tblPendingConsultancies.setModel(new PendingConsultancyTableModel(listPendingConsultancies));
        tblPatientVitals.setModel(new VitalsDataTableModel(listPatientVitals));
    }
}
  

   


